window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "app", "modulename": "app", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "app.app", "modulename": "app", "qualname": "app", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Flask &#x27;app&#x27;&gt;"}, {"fullname": "app.loginManager", "modulename": "app", "qualname": "loginManager", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;flask_login.login_manager.LoginManager object&gt;"}, {"fullname": "app.mail", "modulename": "app", "qualname": "mail", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;flask_mail.Mail object&gt;"}, {"fullname": "app.serializer", "modulename": "app", "qualname": "serializer", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;itsdangerous.url_safe.URLSafeTimedSerializer object&gt;"}, {"fullname": "app.home", "modulename": "app", "qualname": "home", "kind": "function", "doc": "<p>Str\u00e1nka slou\u017e\u00ed k p\u0159ihl\u00e1\u0161en\u00ed u\u017eivatel\u016f.</p>\n\n<p>Funkcionalita:\n    - Zpracov\u00e1v\u00e1 GET a POST requesty.\n    - P\u0159i GET requestu vrac\u00ed p\u0159ihla\u0161ovac\u00ed formul\u00e1\u0159.\n    - P\u0159i POST requestu ov\u011b\u0159uje p\u0159ihla\u0161ovac\u00ed \u00fadaje u\u017eivatele.</p>\n\n<p>Args:\n    email (str): Emailov\u00e1 adresa zadan\u00e1 u\u017eivatelem p\u0159i POST requestu.\n    heslo (str): Heslo zadan\u00e9 u\u017eivatelem p\u0159i POST requestu.</p>\n\n<p>Returns:\n    - render_template(\"home.html\"): HTML str\u00e1nka s p\u0159ihla\u0161ovac\u00edm formul\u00e1\u0159em (GET request).\n    - redirect(url_for('calendar')): P\u0159esm\u011brov\u00e1n\u00ed na kalend\u00e1\u0159 komisa\u0159e (POST request, spr\u00e1vn\u00e9 p\u0159ihl\u00e1\u0161en\u00ed).\n    - redirect(url_for('calendar')): P\u0159esm\u011brov\u00e1n\u00ed na kalend\u00e1\u0159 auto\u0161koly (POST request, spr\u00e1vn\u00e9 p\u0159ihl\u00e1\u0161en\u00ed).\n    - flash(\"message.html\", message=error): Chybov\u00e1 zpr\u00e1va p\u0159i \u0161patn\u00e9m p\u0159ihl\u00e1\u0161en\u00ed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.forgotten_password", "modulename": "app", "qualname": "forgotten_password", "kind": "function", "doc": "<p>Zpracov\u00e1v\u00e1 funkci zapomenut\u00e9ho hesla, v\u010detn\u011b ov\u011b\u0159en\u00ed emailu, generov\u00e1n\u00ed tokenu a odes\u00edl\u00e1n\u00ed odkaz\u016f na resetov\u00e1n\u00ed hesla.</p>\n\n<p>Tato metoda zpracov\u00e1v\u00e1 GET a POST po\u017eadavky pro str\u00e1nku \"zapomenut\u00e9 heslo\". \nAutentizovan\u00ed u\u017eivatel\u00e9 jsou p\u0159esm\u011brov\u00e1ni na str\u00e1nku kalend\u00e1\u0159e. \nNeautentizovan\u00ed u\u017eivatel\u00e9 mohou zadat emailovou adresu, kter\u00e1 se ov\u011b\u0159\u00ed, \nidentifikuje u\u017eivatele (administr\u00e1tor nebo auto\u0161kola), vytvo\u0159\u00ed resetovac\u00ed token a ode\u0161le email s odkazem na resetov\u00e1n\u00ed hesla.</p>\n\n<p>Vrac\u00ed:\n    - P\u0159esm\u011bruje autentizovan\u00e9 u\u017eivatele na str\u00e1nku kalend\u00e1\u0159e.\n    - P\u0159i GET po\u017eadavku zobraz\u00ed HTML str\u00e1nku pro zapomenut\u00e9 heslo.\n    - P\u0159i \u00fasp\u011b\u0161n\u00e9m POST po\u017eadavku ode\u0161le email s odkazem na resetov\u00e1n\u00ed hesla nebo zobraz\u00ed odpov\u00eddaj\u00edc\u00ed chybovou hl\u00e1\u0161ku.\n    - Po zpracov\u00e1n\u00ed POST po\u017eadavku p\u0159esm\u011bruje na domovskou str\u00e1nku.</p>\n\n<p>Vyvol\u00e1v\u00e1:\n    - Exception: Pokud se nepoda\u0159\u00ed odeslat email, zobraz\u00ed se u\u017eivateli hl\u00e1\u0161ka a bude p\u0159esm\u011brov\u00e1n na domovskou str\u00e1nku.</p>\n\n<p>Metody:\n    - GET: Zobraz\u00ed HTML \u0161ablonu pro zapomenut\u00e9 heslo.\n    - POST: Zpracuje po\u017eadavek na odesl\u00e1n\u00ed emailu pro resetov\u00e1n\u00ed hesla.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.reset_password", "modulename": "app", "qualname": "reset_password", "kind": "function", "doc": "<p>Zpracov\u00e1v\u00e1 resetov\u00e1n\u00ed hesla na z\u00e1klad\u011b platn\u00e9ho tokenu.</p>\n\n<p>Tento endpoint obsluhuje GET a POST po\u017eadavky pro resetov\u00e1n\u00ed hesla:</p>\n\n<ul>\n<li>V GET po\u017eadavku zobraz\u00ed formul\u00e1\u0159 pro nastaven\u00ed nov\u00e9ho hesla.</li>\n<li>V POST po\u017eadavku ov\u011b\u0159\u00ed token, aktualizuje heslo v datab\u00e1zi a p\u0159esm\u011bruje u\u017eivatele na domovskou str\u00e1nku.</li>\n</ul>\n\n<p>Vrac\u00ed:\n    - P\u0159i GET po\u017eadavku \u0161ablonu <code>reset_hesla.html</code>.\n    - P\u0159i \u00fasp\u011b\u0161n\u00e9m POST po\u017eadavku p\u0159esm\u011bruje u\u017eivatele na domovskou str\u00e1nku.\n    - Pokud je token neplatn\u00fd nebo vypr\u0161el, zobraz\u00ed p\u0159\u00edslu\u0161nou chybovou zpr\u00e1vu.</p>\n\n<p>Vyvol\u00e1v\u00e1:\n    - <code>SignatureExpired</code>: Pokud vypr\u0161\u00ed platnost tokenu (po 2 hodin\u00e1ch).\n    - Vrac\u00ed zpr\u00e1vu \"Nestihnul jsi to\".\n    - <code>BadSignature</code>: Pokud je token zm\u011bn\u011bn nebo neplatn\u00fd.\n    - Vyvol\u00e1 chybu 404.</p>\n\n<p>Metody:\n    - GET:\n        - Ov\u011b\u0159\u00ed platnost tokenu.\n        - Zobraz\u00ed \u0161ablonu <code>reset_hesla.html</code> pro zad\u00e1n\u00ed nov\u00e9ho hesla.\n    - POST:\n        - Ov\u011b\u0159\u00ed platnost tokenu.\n        - Aktualizuje heslo v datab\u00e1zi podle typu u\u017eivatele:\n            - Pokud email kon\u010d\u00ed na <code>@mesto-most.cz</code>, heslo je zm\u011bn\u011bno u komisa\u0159e.\n            - Jinak je heslo zm\u011bn\u011bno u auto\u0161koly.\n        - Pou\u017e\u00edv\u00e1 SHA-256 hash pro ukl\u00e1d\u00e1n\u00ed hesel.\n        - Ukl\u00e1d\u00e1 zm\u011bny do datab\u00e1ze a p\u0159esm\u011bruje u\u017eivatele na domovskou str\u00e1nku.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">token</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.create_password", "modulename": "app", "qualname": "create_password", "kind": "function", "doc": "<p>Zpracov\u00e1v\u00e1 vytvo\u0159en\u00ed nov\u00e9ho hesla na z\u00e1klad\u011b platn\u00e9ho tokenu.</p>\n\n<p>Endpoint umo\u017e\u0148uje resetov\u00e1n\u00ed hesla pro u\u017eivatele pomoc\u00ed tokenu zaslan\u00e9ho emailem.\nToken je platn\u00fd po dobu dvou dn\u016f (172800 sekund). Podporuje GET a POST po\u017eadavky:</p>\n\n<ul>\n<li>V GET po\u017eadavku zobraz\u00ed formul\u00e1\u0159 pro zad\u00e1n\u00ed nov\u00e9ho hesla.</li>\n<li>V POST po\u017eadavku ulo\u017e\u00ed nov\u00e9 heslo do datab\u00e1ze.</li>\n</ul>\n\n<p>Args:\n    token (str): Token generovan\u00fd p\u0159i procesu \u017e\u00e1dosti o resetov\u00e1n\u00ed hesla, obsahuje zak\u00f3dovan\u00fd email u\u017eivatele.</p>\n\n<p>Vrac\u00ed:\n    - P\u0159i GET po\u017eadavku \u0161ablonu <code>reset_hesla.html</code> pro zad\u00e1n\u00ed nov\u00e9ho hesla.\n    - P\u0159i \u00fasp\u011b\u0161n\u00e9m POST po\u017eadavku p\u0159esm\u011bruje u\u017eivatele na domovskou str\u00e1nku.\n    - Pokud je token neplatn\u00fd nebo vypr\u0161el, zobraz\u00ed p\u0159\u00edslu\u0161nou chybovou zpr\u00e1vu nebo vyvol\u00e1 chybu 404.</p>\n\n<p>Vyvol\u00e1v\u00e1:\n    - <code>SignatureExpired</code>: Pokud vypr\u0161\u00ed platnost tokenu (po 2 dnech).\n    - Vrac\u00ed zpr\u00e1vu \"Nestihnul jsi to\".\n    - <code>BadSignature</code>: Pokud je token zm\u011bn\u011bn nebo neplatn\u00fd.\n    - Vyvol\u00e1 chybu 404.</p>\n\n<p>Metody:\n    - GET:\n        - Ov\u011b\u0159\u00ed platnost tokenu.\n        - Zobraz\u00ed \u0161ablonu <code>reset_hesla.html</code> pro zad\u00e1n\u00ed nov\u00e9ho hesla.\n    - POST:\n        - Ov\u011b\u0159\u00ed platnost tokenu.\n        - Z formul\u00e1\u0159e na\u010dte nov\u00e9 heslo.\n        - Heslo zahashuje pomoc\u00ed SHA-256 a ulo\u017e\u00ed do datab\u00e1ze pro u\u017eivatele (auto\u0161kolu) odpov\u00eddaj\u00edc\u00ed emailu z tokenu.\n        - Ulo\u017e\u00ed zm\u011bny do datab\u00e1ze a p\u0159esm\u011bruje u\u017eivatele na domovskou str\u00e1nku.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">token</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.calendar", "modulename": "app", "qualname": "calendar", "kind": "function", "doc": "<p>Zpracov\u00e1v\u00e1 zobrazen\u00ed hlavn\u00ed str\u00e1nky kalend\u00e1\u0159e podle role aktu\u00e1ln\u011b p\u0159ihl\u00e1\u0161en\u00e9ho u\u017eivatele.</p>\n\n<p>Tento endpoint kontroluje roli p\u0159ihl\u00e1\u0161en\u00e9ho u\u017eivatele a vrac\u00ed odpov\u00eddaj\u00edc\u00ed verzi hlavn\u00ed str\u00e1nky kalend\u00e1\u0159e.</p>\n\n<p>Vrac\u00ed:\n    - \u0160ablonu <code>main_page.html</code> s parametry podle role u\u017eivatele:\n        - <code>superadmin=True</code>: Pokud je u\u017eivatel superadministr\u00e1tor.\n        - <code>admin=True</code>: Pokud je u\u017eivatel komisa\u0159 s administr\u00e1torsk\u00fdmi pr\u00e1vy.\n        - Bez parametr\u016f: Pokud je u\u017eivatel b\u011b\u017en\u00fd komisa\u0159.\n    - \u0160ablonu <code>main_page_user.html</code>: Pokud je u\u017eivatel b\u011b\u017en\u00fd u\u017eivatel (nap\u0159. auto\u0161kola).</p>\n\n<p>Vyvol\u00e1v\u00e1:\n    - <code>404</code>: Pokud u\u017eivatel nen\u00ed p\u0159ihl\u00e1\u0161en\u00fd (zaji\u0161t\u011bno pomoc\u00ed <code>@login_required</code>).</p>\n\n<p>Metody:\n    - GET:\n        - Kontroluje roli u\u017eivatele:\n            - <strong>SuperAdmin</strong>: Vrac\u00ed str\u00e1nku <code>main_page.html</code> s p\u0159\u00edznakem <code>superadmin=True</code>.\n            - <strong>Admin Komisa\u0159</strong>: Vrac\u00ed str\u00e1nku <code>main_page.html</code> s p\u0159\u00edznakem <code>admin=True</code>.\n            - <strong>Komisa\u0159 bez pr\u00e1v</strong>: Vrac\u00ed str\u00e1nku <code>main_page.html</code> bez dal\u0161\u00edch p\u0159\u00edznak\u016f.\n            - <strong>B\u011b\u017en\u00fd u\u017eivatel (auto\u0161kola)</strong>: Vrac\u00ed str\u00e1nku <code>main_page_user.html</code>.</p>\n\n<p>P\u0159edpoklady:\n    - U\u017eivatel mus\u00ed b\u00fdt p\u0159ihl\u00e1\u0161en\u00fd.\n    - Objekt <code>current_user</code> obsahuje atributy:\n        - <code>isSuperAdmin</code> (bool): Ur\u010duje, zda je u\u017eivatel superadministr\u00e1tor.\n        - <code>isCommissar</code> (bool): Ur\u010duje, zda je u\u017eivatel komisa\u0159.\n        - <code>isAdmin</code> (bool): Ur\u010duje, zda je u\u017eivatel administr\u00e1tor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.term", "modulename": "app", "qualname": "term", "kind": "function", "doc": "<p>Zpracov\u00e1v\u00e1 zobrazen\u00ed a spr\u00e1vu term\u00ednu na z\u00e1klad\u011b role aktu\u00e1ln\u011b p\u0159ihl\u00e1\u0161en\u00e9ho u\u017eivatele a stavu term\u00ednu.</p>\n\n<p>Tento endpoint umo\u017e\u0148uje u\u017eivatel\u016fm a administr\u00e1tor\u016fm p\u0159\u00edstup k informac\u00edm o term\u00ednech, z\u00e1pis student\u016f, \nspr\u00e1vu zkou\u0161ek a nastaven\u00ed term\u00edn\u016f. Obsah str\u00e1nky a dostupn\u00e9 akce se li\u0161\u00ed podle role u\u017eivatele (komisa\u0159, admin, superadmin) \na aktu\u00e1ln\u00edho stavu term\u00ednu (aktivn\u00ed, neaktivn\u00ed, uzav\u0159en\u00fd).</p>\n\n<p>Args:\n    id (str): Identifik\u00e1tor term\u00ednu, kter\u00fd se m\u00e1 na\u010d\u00edst.</p>\n\n<p>Vrac\u00ed:\n    - <code>404</code>: Pokud term\u00edn neexistuje nebo je neaktivn\u00ed pro u\u017eivatele.\n    - \u0160ablony HTML podle role u\u017eivatele a stavu term\u00ednu:\n        - <code>term.html</code>: Str\u00e1nka pro u\u017eivatele s mo\u017enost\u00ed zapsat \u017e\u00e1ky nebo zobrazit jejich stav.\n        - <code>term_admin.html</code>: Str\u00e1nka pro adminy a superadminy s kompletn\u00ed spr\u00e1vou term\u00ednu.\n        - <code>term_komisar.html</code>: Str\u00e1nka pro komisa\u0159e bez mo\u017enosti spr\u00e1vy student\u016f.\n        - <code>zapis_studenta_adminem.html</code>: Str\u00e1nka pro adminy pro z\u00e1pis student\u016f do neaktivn\u00edho term\u00ednu.\n        - <code>term_conclusion.html</code>: Str\u00e1nka se z\u00e1v\u011bry term\u00ednu pro adminy a superadminy.</p>\n\n<p>Vyvol\u00e1v\u00e1:\n    - <code>404</code>: Pokud term\u00edn neexistuje nebo nen\u00ed dostupn\u00fd u\u017eivateli.\n    - R\u016fzn\u00e9 v\u00fdjimky z datab\u00e1ze v p\u0159\u00edpad\u011b chybn\u00e9ho dotazu.</p>\n\n<p>Chov\u00e1n\u00ed podle role:\n    - <strong>U\u017eivatel</strong>:\n        - M\u00e1 p\u0159\u00edstup pouze k term\u00edn\u016fm, kter\u00e9 jsou aktivn\u00ed ('Y') a uzav\u0159en\u00e9 ('R').\n        - M\u016f\u017ee zapsat studenty nebo zobrazit seznam zapsan\u00fdch student\u016f.\n    - <strong>Komisa\u0159</strong>:\n        - Vid\u00ed term\u00edny a seznamy student\u016f podle auto\u0161kol.\n    - <strong>Admin/Superadmin</strong>:\n        - Vid\u00ed v\u0161echny term\u00edny.\n        - M\u016f\u017ee p\u0159id\u00e1vat studenty, nastavovat za\u010d\u00e1tek zkou\u0161ky a potvrzovat studenty.\n        - M\u00e1 p\u0159\u00edstup ke spr\u00e1v\u011b neaktivn\u00edch term\u00edn\u016f a uzav\u0159en\u00fdch term\u00edn\u016f.</p>\n\n<p>Stavy term\u00ednu:\n    - <strong>'N' (Neaktivn\u00ed)</strong>:\n        - Umo\u017e\u0148uje admin\u016fm p\u0159ipravit term\u00edn k aktivaci, p\u0159idat studenty a nastavit detaily.\n    - <strong>'Y' (Aktivn\u00ed)</strong>:\n        - U\u017eivatel\u00e9 a admini mohou pracovat s aktivn\u00edmi z\u00e1znamy student\u016f.\n    - <strong>'R' (Uzav\u0159en\u00fd)</strong>:\n        - Term\u00edn je uzav\u0159en, admini mohou zobrazit z\u00e1v\u011bry student\u016f a v\u00fdsledky zkou\u0161ek.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.profile", "modulename": "app", "qualname": "profile", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.profile_admin", "modulename": "app", "qualname": "profile_admin", "kind": "function", "doc": "<h1 id=\"todo\">TODO</h1>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.new_driving_school", "modulename": "app", "qualname": "new_driving_school", "kind": "function", "doc": "<p>Zpracov\u00e1v\u00e1 p\u0159id\u00e1v\u00e1n\u00ed nov\u00e9 auto\u0161koly do syst\u00e9mu.</p>\n\n<p>Endpoint umo\u017e\u0148uje administr\u00e1tor\u016fm p\u0159id\u00e1vat nov\u00e9 auto\u0161koly. Podporuje GET a POST po\u017eadavky:</p>\n\n<ul>\n<li>V GET po\u017eadavku zobraz\u00ed formul\u00e1\u0159 pro p\u0159id\u00e1n\u00ed nov\u00e9 auto\u0161koly.</li>\n<li>V POST po\u017eadavku ov\u011b\u0159\u00ed, zda auto\u0161kola ji\u017e existuje. Pokud ne, p\u0159id\u00e1 ji do datab\u00e1ze, \nvygeneruje token a ode\u0161le email s odkazem na vytvo\u0159en\u00ed hesla.</li>\n</ul>\n\n<p>Vrac\u00ed:\n    - <code>404</code>: Pokud u\u017eivatel nen\u00ed administr\u00e1tor.\n    - \u0160ablona <code>new_driving_school.html</code> p\u0159i GET po\u017eadavku.\n    - P\u0159esm\u011brov\u00e1n\u00ed na domovskou str\u00e1nku p\u0159i \u00fasp\u011b\u0161n\u00e9m vytvo\u0159en\u00ed auto\u0161koly.\n    - P\u0159esm\u011brov\u00e1n\u00ed na str\u00e1nku kalend\u00e1\u0159e p\u0159i chyb\u011b v odesl\u00e1n\u00ed emailu.</p>\n\n<p>Vyvol\u00e1v\u00e1:\n    - <code>404</code>: Pokud u\u017eivatel nen\u00ed administr\u00e1tor.\n    - V\u00fdjimky p\u0159i selh\u00e1n\u00ed odes\u00edl\u00e1n\u00ed emailu.</p>\n\n<p>Metody:\n    - GET:\n        - Zobraz\u00ed formul\u00e1\u0159 pro p\u0159id\u00e1n\u00ed nov\u00e9 auto\u0161koly.\n        - Zahrnuje informace o roli u\u017eivatele (admin/superadmin).\n    - POST:\n        - Zpracuje \u00fadaje z formul\u00e1\u0159e:\n            - <code>nazev</code> (str): N\u00e1zev auto\u0161koly.\n            - <code>dat_schranka</code> (str): Datov\u00e1 schr\u00e1nka auto\u0161koly.\n            - <code>email</code> (str): Email auto\u0161koly.\n        - Ov\u011b\u0159\u00ed, zda auto\u0161kola ji\u017e existuje:\n            - Pokud neexistuje:\n                - P\u0159id\u00e1 auto\u0161kolu do datab\u00e1ze.\n                - Vygeneruje token a ode\u0161le email s odkazem na vytvo\u0159en\u00ed hesla.\n            - Pokud existuje:\n                - Vygeneruje nov\u00fd token a ode\u0161le email s odkazem na vytvo\u0159en\u00ed hesla.\n        - Zobrazuje flash zpr\u00e1vy o stavu operace:\n            - \u00dasp\u011b\u0161n\u00e9 p\u0159id\u00e1n\u00ed auto\u0161koly.\n            - Chyba p\u0159i odes\u00edl\u00e1n\u00ed emailu.</p>\n\n<p>P\u0159edpoklady:\n    - U\u017eivatel mus\u00ed b\u00fdt p\u0159ihl\u00e1\u0161en\u00fd a m\u00edt roli administr\u00e1tora.\n    - Objekt <code>current_user</code> obsahuje atributy:\n        - <code>isAdmin</code> (bool): Ur\u010duje, zda je u\u017eivatel administr\u00e1tor.\n        - <code>isSuperAdmin</code> (bool): Ur\u010duje, zda je u\u017eivatel super administr\u00e1tor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.teaching_training", "modulename": "app", "qualname": "teaching_training", "kind": "function", "doc": "<p>Zpracov\u00e1v\u00e1 \u017e\u00e1dosti o z\u00e1pis do v\u00fdcviku a vrac\u00ed p\u0159\u00edslu\u0161nou str\u00e1nku podle role p\u0159ihl\u00e1\u0161en\u00e9ho u\u017eivatele.</p>\n\n<p>Endpoint poskytuje odli\u0161n\u00e9 \u0161ablony a data podle role u\u017eivatele:</p>\n\n<ul>\n<li><strong>Komisa\u0159</strong>: Z\u00edsk\u00e1 seznam v\u0161ech auto\u0161kol a zobraz\u00ed str\u00e1nku pro z\u00e1pis adminem.</li>\n<li><strong>Auto\u0161kola</strong>: Z\u00edsk\u00e1 seznam vozidel sv\u00e9 auto\u0161koly a zobraz\u00ed str\u00e1nku pro z\u00e1pis \u017e\u00e1k\u016f.</li>\n</ul>\n\n<p>Vrac\u00ed:\n    - \u0160ablonu <code>sign_up_admin.html</code> s \u00fadaji o auto\u0161kol\u00e1ch, pokud je u\u017eivatel komisa\u0159.\n    - \u0160ablonu <code>sign_up.html</code> s \u00fadaji o auto\u0161kole a vozidlech, pokud je u\u017eivatel auto\u0161kola.\n    - <code>404</code>: Pokud po\u017eadavek neodpov\u00edd\u00e1 \u017e\u00e1dn\u00e9 z podm\u00ednek.</p>\n\n<p>Vyvol\u00e1v\u00e1:\n    - <code>404</code>: Pokud po\u017eadavek neodpov\u00edd\u00e1 \u017e\u00e1dn\u00e9 z podm\u00ednek.</p>\n\n<p>Metody:\n    - GET:\n        - Zobrazuje p\u0159\u00edslu\u0161nou str\u00e1nku podle role u\u017eivatele.</p>\n\n<p>Chov\u00e1n\u00ed podle role:\n    - <strong>Komisa\u0159</strong>:\n        - Na\u010dte v\u0161echny auto\u0161koly z datab\u00e1ze.\n        - Vrac\u00ed \u0161ablonu <code>sign_up_admin.html</code> s parametry:\n            - <code>autoskoly</code> (list): Seznam auto\u0161kol (ID a n\u00e1zev).\n            - <code>superadmin</code> (bool): Indikuje, zda je u\u017eivatel superadmin.\n            - <code>admin</code> (bool): Indikuje, zda je u\u017eivatel admin.\n    - <strong>Auto\u0161kola</strong>:\n        - Na\u010dte detailn\u00ed informace o aktu\u00e1ln\u00ed auto\u0161kole a jej\u00ed vozidla z datab\u00e1ze.\n        - Vrac\u00ed \u0161ablonu <code>sign_up.html</code> s parametry:\n            - <code>vozidla</code> (list): Seznam vozidel auto\u0161koly.\n            - <code>autoskola</code> (object): Detailn\u00ed informace o auto\u0161kole.</p>\n\n<p>P\u0159edpoklady:\n    - U\u017eivatel mus\u00ed b\u00fdt p\u0159ihl\u00e1\u0161en\u00fd.\n    - Objekt <code>current_user</code> obsahuje atributy:\n        - <code>isCommissar</code> (bool): Ur\u010duje, zda je u\u017eivatel komisa\u0159.\n        - <code>id</code> (int): Identifik\u00e1tor p\u0159ihl\u00e1\u0161en\u00e9 auto\u0161koly.\n        - <code>isAdmin</code> (bool): Ur\u010duje, zda je u\u017eivatel admin.\n        - <code>isSuperAdmin</code> (bool): Ur\u010duje, zda je u\u017eivatel superadmin.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.admin", "modulename": "app", "qualname": "admin", "kind": "function", "doc": "<p>Endpoint pouze pro testov\u00e1n\u00ed, v pln\u00e9 verzi odebrat</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.logs", "modulename": "app", "qualname": "logs", "kind": "function", "doc": "<p>Zpracov\u00e1v\u00e1 zobrazen\u00ed log\u016f auto\u0161koly, p\u0159\u00edstupn\u00e9 pouze administr\u00e1tor\u016fm.</p>\n\n<p>Tento endpoint umo\u017e\u0148uje administr\u00e1tor\u016fm zobrazit logy auto\u0161kol na z\u00e1klad\u011b zadan\u00fdch filtr\u016f:</p>\n\n<ul>\n<li>Administr\u00e1tor si vybere auto\u0161kolu, typ z\u00e1znamu a/nebo datum zobrazen\u00ed.</li>\n<li>Endpoint vyhled\u00e1 odpov\u00eddaj\u00edc\u00ed logy v datab\u00e1zi a zobraz\u00ed je.</li>\n</ul>\n\n<p>Vrac\u00ed:\n    - <code>404</code>: Pokud u\u017eivatel nen\u00ed administr\u00e1tor.\n    - \u0160ablonu <code>logs.html</code>:\n        - P\u0159i GET po\u017eadavku zobraz\u00ed formul\u00e1\u0159 s v\u00fdb\u011brem auto\u0161koly a filtr\u016f.\n        - P\u0159i POST po\u017eadavku zobraz\u00ed logy na z\u00e1klad\u011b zadan\u00fdch filtr\u016f.</p>\n\n<p>Vyvol\u00e1v\u00e1:\n    - <code>404</code>: Pokud u\u017eivatel nen\u00ed administr\u00e1tor.</p>\n\n<p>Metody:\n    - GET:\n        - Vrac\u00ed formul\u00e1\u0159 s mo\u017enost\u00ed v\u00fdb\u011bru:\n            - Auto\u0161koly.\n            - Typu z\u00e1znamu.\n            - Datum od.\n        - Parametry p\u0159edan\u00e9 \u0161ablon\u011b:\n            - <code>autoskoly</code> (list): Seznam auto\u0161kol s jejich ID a n\u00e1zvy.\n    - POST:\n        - Na\u010dte \u00fadaje z formul\u00e1\u0159e:\n            - <code>autoskola</code> (int): ID auto\u0161koly (voliteln\u00e9).\n            - <code>druh</code> (str): Typ logu (voliteln\u00e9).\n            - <code>datum</code> (str): Datum od (voliteln\u00e9).\n        - Filtruje z\u00e1znamy v datab\u00e1zi na z\u00e1klad\u011b zadan\u00fdch parametr\u016f:\n            - Pokud je zad\u00e1na auto\u0161kola, vyhled\u00e1 logy pouze pro ni.\n            - Pokud je zad\u00e1n typ logu, vyhled\u00e1 odpov\u00eddaj\u00edc\u00ed z\u00e1znamy.\n            - Pokud je zad\u00e1no datum, vyhled\u00e1 z\u00e1znamy od tohoto data.\n        - Vrac\u00ed \u0161ablonu <code>logs.html</code> s parametry:\n            - <code>logs</code> (list): Seznam nalezen\u00fdch log\u016f (datum, typ, zpr\u00e1va, n\u00e1zev auto\u0161koly).\n            - <code>autoskoly</code> (list): Seznam auto\u0161kol s jejich ID a n\u00e1zvy.\n            - <code>superadmin</code> (bool): Ur\u010duje, zda je u\u017eivatel superadmin.\n            - <code>admin</code> (bool): Ur\u010duje, zda je u\u017eivatel admin.</p>\n\n<p>P\u0159edpoklady:\n    - U\u017eivatel mus\u00ed b\u00fdt p\u0159ihl\u00e1\u0161en\u00fd a m\u00edt roli administr\u00e1tora.\n    - Objekt <code>current_user</code> obsahuje atributy:\n        - <code>isAdmin</code> (bool): Ur\u010duje, zda je u\u017eivatel admin.\n        - <code>isSuperAdmin</code> (bool): Ur\u010duje, zda je u\u017eivatel superadmin.\n    - Objekt <code>Zaznam</code> obsahuje:\n        - <code>kdy</code> (datetime): Datum a \u010das z\u00e1znamu.\n        - <code>druh</code> (str): Typ z\u00e1znamu.\n        - <code>zprava</code> (str): Obsah z\u00e1znamu.\n        - <code>id_autoskoly</code> (int): ID auto\u0161koly, kter\u00e9 se z\u00e1znam t\u00fdk\u00e1.\n        - <code>autoskola</code>: Relace na objekt auto\u0161koly (pro n\u00e1zev).</p>\n\n<p>Omezen\u00ed:\n    - Vrac\u00ed maxim\u00e1ln\u011b 100 z\u00e1znam\u016f na z\u00e1klad\u011b filtr\u016f.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.rozdat_prava", "modulename": "app", "qualname": "rozdat_prava", "kind": "function", "doc": "<p>Zpracov\u00e1v\u00e1 spr\u00e1vu pr\u00e1v pro komisa\u0159e, p\u0159\u00edstupn\u00e9 pouze superadministr\u00e1tor\u016fm.</p>\n\n<p>Endpoint umo\u017e\u0148uje superadministr\u00e1tor\u016fm zobrazit seznam v\u0161ech komisa\u0159\u016f a jejich aktu\u00e1ln\u00ed stav pr\u00e1v. \nSlou\u017e\u00ed k zobrazen\u00ed a p\u0159\u00edpadn\u00e9 spr\u00e1v\u011b pr\u00e1v (aktu\u00e1ln\u00ed implementace pouze zobrazuje data).</p>\n\n<p>Vrac\u00ed:\n    - <code>404</code>: Pokud u\u017eivatel nen\u00ed superadministr\u00e1tor.\n    - \u0160ablonu <code>rights.html</code> s p\u0159ehledem v\u0161ech komisa\u0159\u016f a jejich pr\u00e1v.</p>\n\n<p>Vyvol\u00e1v\u00e1:\n    - <code>404</code>: Pokud u\u017eivatel nen\u00ed superadministr\u00e1tor.</p>\n\n<p>Metody:\n    - GET:\n        - Na\u010dte seznam v\u0161ech komisa\u0159\u016f z datab\u00e1ze.\n        - Zform\u00e1tuje jejich data do seznamu obsahuj\u00edc\u00edho:\n            - <code>id</code> (int): ID komisa\u0159e.\n            - <code>jmeno</code> (str): Jm\u00e9no komisa\u0159e.\n            - <code>prijmeni</code> (str): P\u0159\u00edjmen\u00ed komisa\u0159e.\n            - <code>isAdmin</code> (str): Datum, kdy byla komisa\u0159i p\u0159id\u011blena administr\u00e1torsk\u00e1 pr\u00e1va (ve form\u00e1tu \"DD.MM.RRRR\"), \n            nebo <code>None</code>, pokud pr\u00e1va nem\u00e1.\n        - P\u0159ed\u00e1 zform\u00e1tovan\u00fd seznam \u0161ablon\u011b <code>rights.html</code>.</p>\n\n<p>P\u0159edpoklady:\n    - U\u017eivatel mus\u00ed b\u00fdt p\u0159ihl\u00e1\u0161en\u00fd a m\u00edt roli superadministr\u00e1tora.\n    - Objekt <code>current_user</code> obsahuje atribut:\n        - <code>isSuperAdmin</code> (bool): Ur\u010duje, zda je u\u017eivatel superadministr\u00e1tor.\n    - Objekt <code>Komisar</code> obsahuje:\n        - <code>id</code> (int): ID komisa\u0159e.\n        - <code>jmeno</code> (str): Jm\u00e9no komisa\u0159e.\n        - <code>prijmeni</code> (str): P\u0159\u00edjmen\u00ed komisa\u0159e.\n        - <code>isAdmin</code> (datetime or None): Datum p\u0159i\u0159azen\u00ed administr\u00e1torsk\u00fdch pr\u00e1v, nebo <code>None</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.pridat_prava", "modulename": "app", "qualname": "pridat_prava", "kind": "function", "doc": "<p>Ud\u011bluje administr\u00e1torsk\u00e1 pr\u00e1va komisa\u0159i na z\u00e1klad\u011b ID a data.</p>\n\n<p>Endpoint umo\u017e\u0148uje p\u0159i\u0159adit komisa\u0159i administr\u00e1torsk\u00e1 pr\u00e1va do ur\u010dit\u00e9ho data. \nVlo\u017e\u00ed zadan\u00e9 datum do sloupce <code>isAdmin</code> v datab\u00e1zov\u00e9 tabulce komisa\u0159\u016f. \nPo uplynut\u00ed tohoto data syst\u00e9m automaticky odstran\u00ed hodnotu ze sloupce <code>isAdmin</code>, \n\u010d\u00edm\u017e dojde ke zru\u0161en\u00ed administr\u00e1torsk\u00fdch pr\u00e1v.</p>\n\n<p>Vrac\u00ed:\n    - <code>200</code>: Pokud byly pr\u00e1va \u00fasp\u011b\u0161n\u011b p\u0159i\u0159azeny.\n    - <code>404</code>: Pokud nebyl nalezen komisa\u0159 s dan\u00fdm ID nebo pokud se na endpoint sna\u017e\u00ed dostat n\u011bkdo jin\u00fd ne\u017e superadmin.\n    - <code>400</code>: Pokud nastane jak\u00e1koli jin\u00e1 chyba p\u0159i zpracov\u00e1n\u00ed po\u017eadavku.</p>\n\n<p>Vyvol\u00e1v\u00e1:\n    - V\u00fdjimku (Exception): Pokud dojde k chyb\u011b p\u0159i zpracov\u00e1n\u00ed po\u017eadavku.</p>\n\n<p>Metody:\n    - POST:\n        - P\u0159ij\u00edm\u00e1 JSON objekt s kl\u00ed\u010di:\n            - <code>id</code> (int): ID komisa\u0159e, kter\u00e9mu maj\u00ed b\u00fdt ud\u011blena pr\u00e1va.\n            - <code>date</code> (str): Datum ve form\u00e1tu <code>RRRR-MM-DD</code>, do kter\u00e9ho maj\u00ed b\u00fdt pr\u00e1va platn\u00e1.\n        - Na\u010dte komisa\u0159e z datab\u00e1ze podle zadan\u00e9ho ID.\n        - Pokud je komisa\u0159 nalezen:\n            - Aktualizuje jeho sloupec <code>isAdmin</code> na zadan\u00e9 datum.\n            - Ulo\u017e\u00ed zm\u011bny do datab\u00e1ze.\n            - Vr\u00e1t\u00ed zpr\u00e1vu o \u00fasp\u011b\u0161n\u00e9m proveden\u00ed.\n        - Pokud komisa\u0159 nen\u00ed nalezen:\n            - Vr\u00e1t\u00ed chybu <code>404</code> s p\u0159\u00edslu\u0161nou zpr\u00e1vou.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.odebrat_prava", "modulename": "app", "qualname": "odebrat_prava", "kind": "function", "doc": "<p>Odeb\u00edr\u00e1 administr\u00e1torsk\u00e1 pr\u00e1va komisa\u0159i na z\u00e1klad\u011b ID.</p>\n\n<p>Endpoint umo\u017e\u0148uje odstranit administr\u00e1torsk\u00e1 pr\u00e1va komisa\u0159e. \nNastav\u00ed hodnotu sloupce <code>isAdmin</code> na <code>None</code> v datab\u00e1zov\u00e9 tabulce komisa\u0159\u016f.</p>\n\n<p>Vrac\u00ed:\n    - <code>200</code>: Pokud byla pr\u00e1va \u00fasp\u011b\u0161n\u011b odebr\u00e1na.\n    - <code>404</code>: Pokud nebyl nalezen komisa\u0159 s dan\u00fdm ID.\n    - <code>400</code>: Pokud nastane jak\u00e1koli jin\u00e1 chyba p\u0159i zpracov\u00e1n\u00ed po\u017eadavku.</p>\n\n<p>Vyvol\u00e1v\u00e1:\n    - V\u00fdjimku (Exception): Pokud dojde k chyb\u011b p\u0159i zpracov\u00e1n\u00ed po\u017eadavku.</p>\n\n<p>Metody:\n    - POST:\n        - P\u0159ij\u00edm\u00e1 JSON objekt s kl\u00ed\u010dem:\n            - <code>id</code> (int): ID komisa\u0159e, kter\u00e9mu maj\u00ed b\u00fdt odebr\u00e1na pr\u00e1va.\n        - Na\u010dte komisa\u0159e z datab\u00e1ze podle zadan\u00e9ho ID.\n        - Pokud je komisa\u0159 nalezen:\n            - Nastav\u00ed jeho sloupec <code>isAdmin</code> na <code>None</code>.\n            - Ulo\u017e\u00ed zm\u011bny do datab\u00e1ze.\n            - Vr\u00e1t\u00ed zpr\u00e1vu o \u00fasp\u011b\u0161n\u00e9m odebr\u00e1n\u00ed pr\u00e1v.\n        - Pokud komisa\u0159 nen\u00ed nalezen:\n            - Vr\u00e1t\u00ed chybu <code>404</code> s p\u0159\u00edslu\u0161nou zpr\u00e1vou.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.nova_autoskola", "modulename": "app", "qualname": "nova_autoskola", "kind": "function", "doc": "<p>Vytv\u00e1\u0159\u00ed nov\u00fd z\u00e1znam auto\u0161koly v datab\u00e1zi.</p>\n\n<p>Endpoint umo\u017e\u0148uje p\u0159idat novou auto\u0161kolu pomoc\u00ed POST po\u017eadavku. \nData auto\u0161koly (n\u00e1zev, datov\u00e1 schr\u00e1nka, adresa u\u010debny, email a heslo) \njsou p\u0159ij\u00edm\u00e1na z formul\u00e1\u0159e. Heslo je p\u0159ed ulo\u017een\u00edm zahashov\u00e1no pomoc\u00ed SHA256.</p>\n\n<p>Vrac\u00ed:\n    - P\u0159esm\u011brov\u00e1n\u00ed na endpoint <code>admin</code> s potvrzen\u00edm o \u00fasp\u011b\u0161n\u00e9m vytvo\u0159en\u00ed auto\u0161koly.\n    - Vyvol\u00e1 chybu (Exception), pokud dojde k selh\u00e1n\u00ed p\u0159i ukl\u00e1d\u00e1n\u00ed do datab\u00e1ze.</p>\n\n<p>Vyvol\u00e1v\u00e1:\n    - V\u00fdjimku (Exception): Pokud dojde k chyb\u011b p\u0159i vytv\u00e1\u0159en\u00ed nebo ukl\u00e1d\u00e1n\u00ed auto\u0161koly.</p>\n\n<p>Metody:\n    - POST:\n        - P\u0159ij\u00edm\u00e1 n\u00e1sleduj\u00edc\u00ed formul\u00e1\u0159ov\u00e1 data:\n            - <code>nazev</code> (str): N\u00e1zev auto\u0161koly.\n            - <code>datova_schranka</code> (str): Datov\u00e1 schr\u00e1nka auto\u0161koly.\n            - <code>adresa_ucebny</code> (str): Adresa u\u010debny auto\u0161koly.\n            - <code>email</code> (str): E-mailov\u00e1 adresa auto\u0161koly.\n            - <code>heslo</code> (str): Heslo auto\u0161koly (zahashovan\u00e9 p\u0159ed ulo\u017een\u00edm).\n        - Vytvo\u0159\u00ed nov\u00fd z\u00e1znam auto\u0161koly v datab\u00e1zi.\n        - Ulo\u017e\u00ed nov\u00fd z\u00e1znam pomoc\u00ed <code>db.session.commit()</code>.\n        - P\u0159i \u00fasp\u011b\u0161n\u00e9m vytvo\u0159en\u00ed zobraz\u00ed u\u017eivateli flash zpr\u00e1vu `Auto\u0161kola se p\u0159idala!</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.novy_komisar", "modulename": "app", "qualname": "novy_komisar", "kind": "function", "doc": "<p>API metoda pro vytvo\u0159en\u00ed komisa\u0159e, ur\u010den\u00e1 pro pou\u017eit\u00ed pouze b\u011bhem testov\u00e1n\u00ed</p>\n\n<p>Parametry:\n    request: mysl\u00edm si, \u017ee se jedn\u00e1 o objekt, kter\u00fd v sob\u011b p\u0159en\u00e1\u0161\u00ed JSON z formu pro informace o komisa\u0159i</p>\n\n<p>Vrac\u00ed:\n    raise (str): pokud p\u0159i vytvo\u0159en\u00ed a nebo commitu do datab\u00e1ze vznikne error\n    flash(str): p\u0159i \u00fasp\u011b\u0161n\u00e9m p\u0159id\u00e1n\u00ed se vytvo\u0159\u00ed zpr\u00e1va, kter\u00e1 se zobraz\u00ed p\u0159i dal\u0161\u00edm render_templatu\n    redirect(url_for(str)): po p\u0159ijmut\u00ed a vytvo\u0159en\u00ed komisa\u0159e vr\u00e1t\u00ed u\u017eivatele zp\u00e1tky na /admin</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.novy_zak", "modulename": "app", "qualname": "novy_zak", "kind": "function", "doc": "<p>API metoda pro vytvo\u0159en\u00ed \u017e\u00e1ka, ur\u010den\u00e1 pro pou\u017eit\u00ed pouze b\u011bhem testov\u00e1n\u00ed</p>\n\n<p>Parametry:\n    request: mysl\u00edm si, \u017ee se jedn\u00e1 o objekt, kter\u00fd v sob\u011b p\u0159en\u00e1\u0161\u00ed JSON z formu pro informace o \u017e\u00e1kovi</p>\n\n<p>Vrac\u00ed:\n    str: pokud p\u0159i vytvo\u0159en\u00ed a nebo commitu do datab\u00e1ze vznikne error\n    flash(str): p\u0159i \u00fasp\u011b\u0161n\u00e9m p\u0159id\u00e1n\u00ed se vytvo\u0159\u00ed zpr\u00e1va, kter\u00e1 se zobraz\u00ed p\u0159i dal\u0161\u00edm render_templatu\n    redirect(url_for(str)): po p\u0159ijmut\u00ed a vytvo\u0159en\u00ed auto\u0161koly vr\u00e1t\u00ed u\u017eivatele zp\u00e1tky na /admin</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.novy_termin", "modulename": "app", "qualname": "novy_termin", "kind": "function", "doc": "<p>API metoda pro vytvo\u0159en\u00ed term\u00ednu, ur\u010den\u00e1 pro pou\u017eit\u00ed pouze b\u011bhem testov\u00e1n\u00ed</p>\n\n<p>Parametry:\n    request: mysl\u00edm si, \u017ee se jedn\u00e1 o objekt, kter\u00fd v sob\u011b p\u0159en\u00e1\u0161\u00ed JSON z formu pro informace o term\u00ednu</p>\n\n<p>Vrac\u00ed:\n    str: pokud p\u0159i vytvo\u0159en\u00ed a nebo commitu do datab\u00e1ze vznikne error\n    flash(str): p\u0159i \u00fasp\u011b\u0161n\u00e9m p\u0159id\u00e1n\u00ed se vytvo\u0159\u00ed zpr\u00e1va, kter\u00e1 se zobraz\u00ed p\u0159i dal\u0161\u00edm render_templatu\n    redirect(url_for(str)): po p\u0159ijmut\u00ed a vytvo\u0159en\u00ed auto\u0161koly vr\u00e1t\u00ed u\u017eivatele zp\u00e1tky na /admin</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.vytvor_termin", "modulename": "app", "qualname": "vytvor_termin", "kind": "function", "doc": "<p>Vytv\u00e1\u0159\u00ed nov\u00fd term\u00edn v syst\u00e9mu na z\u00e1klad\u011b zadan\u00fdch \u00fadaj\u016f.</p>\n\n<p>Endpoint umo\u017e\u0148uje p\u0159idat nov\u00fd term\u00edn pomoc\u00ed POST po\u017eadavku. Data term\u00ednu (datum a maxim\u00e1ln\u00ed po\u010det \u0159idi\u010d\u016f) \njsou p\u0159ij\u00edm\u00e1na jako JSON objekt. P\u0159i \u00fasp\u011b\u0161n\u00e9m vytvo\u0159en\u00ed term\u00ednu dojde k p\u0159esm\u011brov\u00e1n\u00ed na str\u00e1nku kalend\u00e1\u0159e.</p>\n\n<p>Vrac\u00ed:\n    - P\u0159esm\u011brov\u00e1n\u00ed na endpoint <code>calendar</code> po \u00fasp\u011b\u0161n\u00e9m vytvo\u0159en\u00ed term\u00ednu.\n    - <code>400</code>: Pokud nastane jak\u00e1koli chyba p\u0159i zpracov\u00e1n\u00ed po\u017eadavku.</p>\n\n<p>Vyvol\u00e1v\u00e1:\n    - V\u00fdjimku (Exception): Pokud dojde k chyb\u011b p\u0159i zpracov\u00e1n\u00ed po\u017eadavku nebo p\u0159i ukl\u00e1d\u00e1n\u00ed do datab\u00e1ze.</p>\n\n<p>Metody:\n    - POST:\n        - P\u0159ij\u00edm\u00e1 JSON objekt s kl\u00ed\u010di:\n            - <code>dayId</code> (str): Datum term\u00ednu ve form\u00e1tu <code>RRRR-MM-DD</code>.\n            - <code>pocetMist</code> (int): Maxim\u00e1ln\u00ed po\u010det \u0159idi\u010d\u016f, kte\u0159\u00ed se mohou p\u0159ihl\u00e1sit na term\u00edn.\n        - Vytvo\u0159\u00ed nov\u00fd z\u00e1znam term\u00ednu v datab\u00e1zi pomoc\u00ed modelu <code>Termin</code>.\n        - Ulo\u017e\u00ed nov\u00fd z\u00e1znam pomoc\u00ed <code>db.session.commit()</code>.\n        - P\u0159i \u00fasp\u011b\u0161n\u00e9m vytvo\u0159en\u00ed p\u0159esm\u011bruje u\u017eivatele na endpoint <code>calendar</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.get_calendar_dates", "modulename": "app", "qualname": "get_calendar_dates", "kind": "function", "doc": "<p>Vrac\u00ed seznam term\u00edn\u016f z kalend\u00e1\u0159e v z\u00e1vislosti na roli u\u017eivatele.</p>\n\n<p>Endpoint umo\u017e\u0148uje z\u00edskat seznam term\u00edn\u016f v syst\u00e9mu. Pro komisa\u0159e vrac\u00ed v\u0161echny term\u00edny, \nzat\u00edmco pro ostatn\u00ed u\u017eivatele (nap\u0159\u00edklad auto\u0161koly) vrac\u00ed pouze aktivn\u00ed term\u00edny a ukon\u010den\u00e9 term\u00edny \nspojen\u00e9 s jejich auto\u0161kolou.</p>\n\n<p>Vrac\u00ed:\n    - JSON seznam obsahuj\u00edc\u00ed informace o term\u00ednech.\n    - <code>400</code>: Pokud nastane jak\u00e1koli chyba p\u0159i zpracov\u00e1n\u00ed po\u017eadavku.</p>\n\n<p>Metody:\n    - GET:\n        - Pokud je u\u017eivatel komisa\u0159 (<code>current_user.isCommissar == True</code>):\n            - Na\u010dte v\u0161echny term\u00edny z datab\u00e1ze.\n            - Serializuje ka\u017ed\u00fd term\u00edn do form\u00e1tu.\n            - Vr\u00e1t\u00ed seznam v\u0161ech term\u00edn\u016f ve form\u00e1tu JSON.</p>\n\n<pre><code>    - Pokud u\u017eivatel nen\u00ed komisa\u0159 (`current_user.isCommissar == False`):\n        - Na\u010dte aktivn\u00ed term\u00edny (`ac_flag = 'Y'`) z datab\u00e1ze.\n        - Na\u010dte ukon\u010den\u00e9 term\u00edny (`ac_flag = 'R'`) spojen\u00e9 s auto\u0161kolou u\u017eivatele (`current_user.id`).\n        - Spoj\u00ed aktivn\u00ed i ukon\u010den\u00e9 term\u00edny dohromady.\n        - Serializuje ka\u017ed\u00fd term\u00edn do form\u00e1tu.\n        - Vr\u00e1t\u00ed seznam t\u011bchto term\u00edn\u016f ve form\u00e1tu JSON.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.add_drivers", "modulename": "app", "qualname": "add_drivers", "kind": "function", "doc": "<p>API metoda pro z\u00e1pis \u017e\u00e1k\u016f na term\u00edn, ur\u010den\u00e1 pro auto\u0161koly.</p>\n\n<p>Endpoint umo\u017e\u0148uje auto\u0161kol\u00e1m zapisovat sv\u00e9 \u017e\u00e1ky na konkr\u00e9tn\u00ed term\u00edn zkou\u0161ek. \nP\u0159ij\u00edm\u00e1 JSON objekt obsahuj\u00edc\u00ed seznam \u017e\u00e1k\u016f s detaily a vytv\u00e1\u0159\u00ed z\u00e1znamy v datab\u00e1zi \npro ka\u017ed\u00e9ho validn\u00edho \u017e\u00e1ka.</p>\n\n<p>Vrac\u00ed:\n    - <code>200</code>: Pokud byl z\u00e1pis \u00fasp\u011b\u0161n\u00fd.\n    - <code>400</code>: Pokud nastane jak\u00e1koli chyba p\u0159i zpracov\u00e1n\u00ed po\u017eadavku.</p>\n\n<p>Vyvol\u00e1v\u00e1:\n    - V\u00fdjimku (Exception): Pokud dojde k chyb\u011b p\u0159i zpracov\u00e1n\u00ed nebo p\u0159i ukl\u00e1d\u00e1n\u00ed do datab\u00e1ze.</p>\n\n<p>Metody:\n    - POST:\n        - P\u0159ij\u00edm\u00e1 JSON seznam objekt\u016f s detaily \u017e\u00e1k\u016f:\n        - Pro ka\u017ed\u00e9ho \u017e\u00e1ka:\n            - Zkontroluje existenci v datab\u00e1zi (<code>Zak</code>) na z\u00e1klad\u011b \u00fadaj\u016f.\n            - Pokud \u017e\u00e1k existuje:\n                - Vytvo\u0159\u00ed z\u00e1znam (<code>Zapsany_zak</code>) s \u00fadaji o term\u00ednu a auto\u0161kole.\n                - Vytvo\u0159\u00ed logovac\u00ed z\u00e1znam (<code>Zaznam</code>) o p\u0159id\u00e1n\u00ed \u017e\u00e1ka na term\u00edn.\n                - Ulo\u017e\u00ed oba z\u00e1znamy do datab\u00e1ze.\n        - Vr\u00e1t\u00ed zpr\u00e1vu o \u00fasp\u011bchu (<code>200</code>), pokud byl z\u00e1pis dokon\u010den.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.enroll_by_admin", "modulename": "app", "qualname": "enroll_by_admin", "kind": "function", "doc": "<p>API metoda pro z\u00e1pis \u017e\u00e1k\u016f na term\u00edn spr\u00e1vcem syst\u00e9mu.</p>\n\n<p>Endpoint umo\u017e\u0148uje administr\u00e1torovi zapsat \u017e\u00e1ky na term\u00edn zkou\u0161ek. \nP\u0159ij\u00edm\u00e1 JSON objekt obsahuj\u00edc\u00ed seznam \u017e\u00e1k\u016f s jejich detaily a pokou\u0161\u00ed se je naj\u00edt v datab\u00e1zi.\nPokud je \u017e\u00e1k nalezen, zap\u00ed\u0161e se na term\u00edn a vytvo\u0159\u00ed se z\u00e1znam o z\u00e1pisu. Pokud nen\u00ed nalezen, vr\u00e1t\u00ed chybovou zpr\u00e1vu.</p>\n\n<p>Vrac\u00ed:\n    - <code>200</code>: Pokud byl z\u00e1pis \u00fasp\u011b\u0161n\u00fd pro v\u0161echny zadan\u00e9 \u017e\u00e1ky.\n    - <code>400</code>: Pokud n\u011bkter\u00fd \u017e\u00e1k nebyl nalezen nebo nastala jin\u00e1 chyba p\u0159i zpracov\u00e1n\u00ed po\u017eadavku.</p>\n\n<p>Vyvol\u00e1v\u00e1:\n    - V\u00fdjimku (Exception): Pokud dojde k chyb\u011b p\u0159i zpracov\u00e1n\u00ed nebo p\u0159i ukl\u00e1d\u00e1n\u00ed do datab\u00e1ze.</p>\n\n<p>Metody:\n    - POST:\n        - P\u0159ij\u00edm\u00e1 JSON seznam objekt\u016f s detaily \u017e\u00e1k\u016f.\n        - Pro ka\u017ed\u00e9ho \u017e\u00e1ka:\n            - Pokus\u00ed se naj\u00edt odpov\u00eddaj\u00edc\u00ed z\u00e1znam v datab\u00e1zi (<code>Zak</code>) na z\u00e1klad\u011b zadan\u00fdch \u00fadaj\u016f.\n            - Pokud je \u017e\u00e1k nalezen:\n                - Vytvo\u0159\u00ed z\u00e1znam (<code>Zapsany_zak</code>) s \u00fadaji o term\u00ednu, kategorii opr\u00e1vn\u011bn\u00ed a typu zkou\u0161ky.\n            - Pokud \u017e\u00e1k nen\u00ed nalezen:\n                - P\u0159id\u00e1 do seznamu chyb odpov\u00eddaj\u00edc\u00ed zpr\u00e1vu.\n        - Pokud existuj\u00ed chyby (n\u011bkter\u00fd \u017e\u00e1k nebyl nalezen):\n            - Vr\u00e1t\u00ed seznam chyb (<code>400</code>).\n        - Pokud nejsou \u017e\u00e1dn\u00e9 chyby:\n            - Ulo\u017e\u00ed v\u0161echny z\u00e1znamy do datab\u00e1ze (<code>db.session.commit()</code>).\n            - Vr\u00e1t\u00ed zpr\u00e1vu o \u00fasp\u011bchu (<code>200</code>).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.enroll_drivers", "modulename": "app", "qualname": "enroll_drivers", "kind": "function", "doc": "<p>Potvrzen\u00ed \u00fa\u010dasti studenta na term\u00ednu.</p>\n\n<p>Endpoint nastav\u00ed \u00fa\u010dast studenta na term\u00ednu, p\u0159i\u0159ad\u00ed \u010das za\u010d\u00e1tku zkou\u0161ky a komisa\u0159e. \nVytvo\u0159\u00ed upozorn\u011bn\u00ed pro auto\u0161kolu o potvrzen\u00ed term\u00ednu.</p>\n\n<p>Vrac\u00ed:\n    - <code>200</code>: \u00dasp\u011b\u0161n\u00e9 potvrzen\u00ed.\n    - <code>400</code>: Chyba p\u0159i zpracov\u00e1n\u00ed.</p>\n\n<p>Metody:\n    - POST:\n        - JSON po\u017eadavek:\n            - <code>id</code> (int): ID studenta.\n            - <code>time_start</code> (str): \u010cas za\u010d\u00e1tku zkou\u0161ky.\n            - <code>commissar</code> (int): ID komisa\u0159e.\n        - Na\u010dte studenta a term\u00edn z datab\u00e1ze.\n        - Aktualizuje stav a vytvo\u0159\u00ed z\u00e1znam o potvrzen\u00ed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.add_vehicle", "modulename": "app", "qualname": "add_vehicle", "kind": "function", "doc": "<p>P\u0159id\u00e1n\u00ed vozidla.</p>\n\n<p>Endpoint p\u0159id\u00e1 nov\u00e9 vozidlo do syst\u00e9mu. </p>\n\n<p>Vrac\u00ed:\n    - <code>200</code>: P\u0159esm\u011brov\u00e1n\u00ed na profil po \u00fasp\u011b\u0161n\u00e9m p\u0159id\u00e1n\u00ed.\n    - <code>400</code>: Chyba p\u0159i zpracov\u00e1n\u00ed.</p>\n\n<p>Metody:\n    - POST:\n        - P\u0159ij\u00edm\u00e1 formul\u00e1\u0159ov\u00e1 data:\n            - <code>znacka</code> (str): Zna\u010dka vozidla.\n            - <code>model</code> (str): Model vozidla.\n            - <code>spz</code> (str): SPZ vozidla.\n        - Ulo\u017e\u00ed z\u00e1znam do datab\u00e1ze.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.delete_student_in_term", "modulename": "app", "qualname": "delete_student_in_term", "kind": "function", "doc": "<p>Vymazan\u00ed studenta, kter\u00fd u\u017e je zaps\u00e1n a potvrzen na term\u00ednu.</p>\n\n<p>Endpoint p\u0159id\u00e1 nov\u00e9 vozidlo do syst\u00e9mu. </p>\n\n<p>Vrac\u00ed:\n    - <code>200</code>: P\u0159esm\u011brov\u00e1n\u00ed na profil po \u00fasp\u011b\u0161n\u00e9m p\u0159id\u00e1n\u00ed.\n    - <code>400</code>: Chyba p\u0159i zpracov\u00e1n\u00ed.</p>\n\n<p>Metody:\n    - POST:\n        - P\u0159ij\u00edm\u00e1 formul\u00e1\u0159ov\u00e1 data:\n            - <code>znacka</code> (str): Zna\u010dka vozidla.\n            - <code>model</code> (str): Model vozidla.\n            - <code>spz</code> (str): SPZ vozidla.\n        - Ulo\u017e\u00ed z\u00e1znam do datab\u00e1ze.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.delete_student", "modulename": "app", "qualname": "delete_student", "kind": "function", "doc": "<p>Odebr\u00e1n\u00ed \u017e\u00e1ka z term\u00ednu.</p>\n\n<p>Endpoint umo\u017e\u0148uje auto\u0161kole odebrat studenta z term\u00ednu, pokud jeho \u00fa\u010dast nebyla potvrzena.</p>\n\n<p>Vrac\u00ed:\n    - <code>200</code>: \u00dasp\u011b\u0161n\u00e9 odebr\u00e1n\u00ed studenta.\n    - <code>404</code>: Student nebo z\u00e1znam nenalezen.\n    - <code>400</code>: Chyba p\u0159i zpracov\u00e1n\u00ed.</p>\n\n<p>Metody:\n    - POST:\n        - P\u0159ij\u00edm\u00e1 JSON data:\n            - <code>zak_id</code> (int): ID studenta.\n            - <code>termin_id</code> (int): ID term\u00ednu.\n        - Sma\u017ee z\u00e1znam o \u00fa\u010dasti z tabulky <code>Zapsany_zak</code>.\n        - P\u0159id\u00e1 logovac\u00ed z\u00e1znam o odebr\u00e1n\u00ed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.docx_for_signup", "modulename": "app", "qualname": "docx_for_signup", "kind": "function", "doc": "<p>API metoda, kter\u00e1 vytvo\u0159\u00ed dokument o z\u00e1pisu student\u016f. Zapsan\u00e9 studenty p\u0159id\u00e1 do datab\u00e1ze. </p>\n\n<p>Parametry:\n    request: JSON soubor s nov\u00fdmi studenty, adresou u\u010debny, typem v\u00fduky, vozidli pro v\u00fduku</p>\n\n<p>Vrac\u00ed:\n    str: pokud p\u0159i vytvo\u0159en\u00ed a nebo commitu do datab\u00e1ze vznikne error\n    str: pokud v\u0161e prob\u011bhne v po\u0159\u00e1dku\n    docx: dokument o \u017e\u00e1dost z\u00e1pisu student\u016f do v\u00fduky a v\u00fdcviku</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.generate_doc", "modulename": "app", "qualname": "generate_doc", "kind": "function", "doc": "<p>Generov\u00e1n\u00ed dokumentu.</p>\n\n<p>Endpoint vytvo\u0159\u00ed a vygeneruje dokument obsahuj\u00edc\u00ed informace o term\u00ednu a zapsan\u00fdch \u017e\u00e1c\u00edch.</p>\n\n<p>Vrac\u00ed:\n    - Soubor ke sta\u017een\u00ed (<code>.docx</code>) s vygenerovan\u00fdm dokumentem.\n    - <code>400</code>: Chyba p\u0159i zpracov\u00e1n\u00ed po\u017eadavku nebo chyb\u011bj\u00edc\u00ed data.</p>\n\n<p>Metody:\n    - POST:\n        - P\u0159ij\u00edm\u00e1 JSON data:\n            - <code>name</code> (str): N\u00e1zev auto\u0161koly.\n            - <code>date</code> (str): Datum term\u00ednu (form\u00e1t <code>YYYY-MM-DD</code>).\n        - Na\u010dte auto\u0161kolu, term\u00edn, zapsan\u00e9 \u017e\u00e1ky a komisa\u0159e.\n        - Vygeneruje dokument pomoc\u00ed <code>app_logic.create_document</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.student_success", "modulename": "app", "qualname": "student_success", "kind": "function", "doc": "<p>API metoda, kter\u00e1 slou\u017e\u00ed pro z\u00e1pis \u00fasp\u011bchu studenta na zkou\u0161ce. </p>\n\n<p>Parametry:\n    request: JSON soubor s id studenta, kter\u00fd usp\u011bl.</p>\n\n<p>Vrac\u00ed:\n    str: error, kdy\u017e dojede k chyb\u011b nebo kdy\u017e neexistuje term\u00edn nebo \u017e\u00e1k\n    str: pokud v\u0161e prob\u011bhne v po\u0159\u00e1dku</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.student_reject", "modulename": "app", "qualname": "student_reject", "kind": "function", "doc": "<p>API metoda, kter\u00e1 slou\u017e\u00ed k z\u00e1pisu ne\u00fasp\u011bchu p\u0159i zkou\u0161ce. </p>\n\n<p>Parametry:\n    request: JSON soubor s id \u017e\u00e1ka</p>\n\n<p>Vrac\u00ed:\n    str: error, pokud se nenajde \u017e\u00e1k nebo term\u00edn nebo pokud dojde k n\u011bjak\u00e9 chyb\u011b\n    str: 200, pokud v\u0161e prob\u011bhne v po\u0159\u00e1dku\n    abort: 404 pokud user nen\u00ed admin, jeliko\u017e k metod\u011b by m\u011bl m\u00edt p\u0159\u00edstup pouze admin</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.get_notifications", "modulename": "app", "qualname": "get_notifications", "kind": "function", "doc": "<p>Z\u00edsk\u00e1n\u00ed upozorn\u011bn\u00ed.</p>\n\n<p>Endpoint vrac\u00ed seznam posledn\u00edch 10 upozorn\u011bn\u00ed pro aktu\u00e1ln\u00ed auto\u0161kolu, \nse\u0159azen\u00fdch podle data vytvo\u0159en\u00ed (od nejnov\u011bj\u0161\u00edho).</p>\n\n<p>Vrac\u00ed:\n    - <code>200</code>: Seznam upozorn\u011bn\u00ed (bez nov\u00fdch zpr\u00e1v).\n    - <code>201</code>: Seznam upozorn\u011bn\u00ed (s nov\u00fdmi zpr\u00e1vami).\n    - <code>400</code>: Chyba p\u0159i zpracov\u00e1n\u00ed po\u017eadavku.</p>\n\n<p>Metody:\n    - GET:\n        - Na\u010dte z\u00e1znamy z tabulky <code>Upozorneni</code>:\n            - <code>zprava</code> (str): Text zpr\u00e1vy.\n            - <code>stav</code> (str): Stav zpr\u00e1vy (<code>N</code> = nov\u00e1, <code>R</code> = p\u0159e\u010dten\u00e1).\n        - Vrac\u00ed seznam upozorn\u011bn\u00ed jako JSON.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.change_notifications", "modulename": "app", "qualname": "change_notifications", "kind": "function", "doc": "<p>Zm\u011bna stavu upozorn\u011bn\u00ed.</p>\n\n<p>Endpoint nastav\u00ed stav posledn\u00edch 10 upozorn\u011bn\u00ed aktu\u00e1ln\u00ed auto\u0161koly na \"p\u0159e\u010dten\u00e9\" (<code>stav = 'Y'</code>).</p>\n\n<p>Vrac\u00ed:\n    - <code>204</code>: \u00dasp\u011b\u0161n\u00e1 zm\u011bna stavu.\n    - <code>400</code>: Chyba p\u0159i zpracov\u00e1n\u00ed po\u017eadavku.</p>\n\n<p>Metody:\n    - POST:\n        - Na\u010dte posledn\u00edch 10 upozorn\u011bn\u00ed z tabulky <code>Upozorneni</code>.\n        - Zm\u011bn\u00ed jejich stav na <code>Y</code> (p\u0159e\u010dteno).\n        - Ulo\u017e\u00ed zm\u011bny do datab\u00e1ze.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.get_vehicles", "modulename": "app", "qualname": "get_vehicles", "kind": "function", "doc": "<p>API metoda, kter\u00e1 vrac\u00ed seznam vozidel jednotliv\u00fdch auto\u0161kol. Podle poskytnut\u00e9ho id si najde vozidla s n\u00edm spojen\u00e1 a po\u0161le je zp\u011bt. </p>\n\n<p>Parametry:\n    request: JSON soubor s nov\u00fdmi studenty, adresou u\u010debny, typem v\u00fduky, vozidli pro v\u00fduku</p>\n\n<p>Vrac\u00ed:\n    str: pokud p\u0159i vytvo\u0159en\u00ed a nebo commitu do datab\u00e1ze vznikne error\n    str: pokud v\u0161e prob\u011bhne v po\u0159\u00e1dku\n    docx: dokument o \u017e\u00e1dost z\u00e1pisu student\u016f do v\u00fduky a v\u00fdcviku</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.change_info", "modulename": "app", "qualname": "change_info", "kind": "function", "doc": "<h1 id=\"todo\">TODO</h1>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.error404", "modulename": "app", "qualname": "error404", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">e</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.logout", "modulename": "app", "qualname": "logout", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.inject_globals", "modulename": "app", "qualname": "inject_globals", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.dont_extend_session", "modulename": "app", "qualname": "dont_extend_session", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app.load_user", "modulename": "app", "qualname": "load_user", "kind": "function", "doc": "<h1 id=\"todo\">TODO</h1>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">user_id</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app_logic", "modulename": "app_logic", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "app_logic.porovnat_hesla", "modulename": "app_logic", "qualname": "porovnat_hesla", "kind": "function", "doc": "<p>Metoda slou\u017e\u00ed k porovn\u00e1n\u00ed hesel</p>\n\n<p>Parametry:\n    heslo (str): heslo, kter\u00e9 u\u017eivatel zad\u00e1 p\u0159i p\u0159ihla\u0161ov\u00e1n\u00ed na webov\u00e9 str\u00e1nce\n    db_heslo (str): heslo, kter\u00e9 se vezme z datab\u00e1ze podle zadan\u00e9ho emailu.</p>\n\n<p>Vrac\u00ed:\n    True (boolean): pokud jsou oba stringy stejn\u00e9\n    False (boolean): pokud jsou stringy odli\u0161n\u00e9</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">heslo</span>, </span><span class=\"param\"><span class=\"n\">db_heslo</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "app_logic.User", "modulename": "app_logic", "qualname": "User", "kind": "class", "doc": "<p>This provides default implementations for the methods that Flask-Login\nexpects user objects to have.</p>\n", "bases": "flask_login.mixins.UserMixin"}, {"fullname": "app_logic.User.__init__", "modulename": "app_logic", "qualname": "User.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span>, </span><span class=\"param\"><span class=\"n\">isAdmin</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, {"fullname": "app_logic.User.id", "modulename": "app_logic", "qualname": "User.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "app_logic.create_document", "modulename": "app_logic", "qualname": "create_document", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">autoskola</span>, </span><span class=\"param\"><span class=\"n\">datum</span>, </span><span class=\"param\"><span class=\"n\">seznam_studentu</span>, </span><span class=\"param\"><span class=\"n\">komisar</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "database", "modulename": "database", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "database.db", "modulename": "database", "qualname": "db", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;SQLAlchemy&gt;"}, {"fullname": "database.Zak", "modulename": "database", "qualname": "Zak", "kind": "class", "doc": "<p>T\u0159\u00edda Zak je model reprezentuj\u00edc\u00ed tabulku \u017e\u00e1ci v DB</p>\n", "bases": "sqlalchemy.orm.decl_api._DynamicAttributesType, sqlalchemy.inspection.Inspectable[sqlalchemy.orm.mapper.Mapper[typing.Any]]"}, {"fullname": "database.Zak.__init__", "modulename": "database", "qualname": "Zak.__init__", "kind": "function", "doc": "<p>A simple constructor that allows initialization from kwargs.</p>\n\n<p>Sets attributes on the constructed instance using the names and\nvalues in <code>kwargs</code>.</p>\n\n<p>Only keys that are present as\nattributes of the instance's class are allowed. These could be,\nfor example, any mapped columns or relationships.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "database.Zak.id", "modulename": "database", "qualname": "Zak.id", "kind": "variable", "doc": "<p>id (int): Prim\u00e1rn\u00ed kl\u00ed\u010d tabulky, unik\u00e1tn\u00ed identifik\u00e1tor \u017e\u00e1ka.</p>\n"}, {"fullname": "database.Zak.ev_cislo", "modulename": "database", "qualname": "Zak.ev_cislo", "kind": "variable", "doc": "<p>ev_cislo (str): Eviden\u010dn\u00ed \u010d\u00edslo \u017e\u00e1ka.</p>\n"}, {"fullname": "database.Zak.jmeno", "modulename": "database", "qualname": "Zak.jmeno", "kind": "variable", "doc": "<p>jmeno (str): Jm\u00e9no \u017e\u00e1ka.</p>\n"}, {"fullname": "database.Zak.prijmeni", "modulename": "database", "qualname": "Zak.prijmeni", "kind": "variable", "doc": "<p>prijmeni (str): P\u0159ijmen\u00ed \u017e\u00e1ka.</p>\n"}, {"fullname": "database.Zak.narozeni", "modulename": "database", "qualname": "Zak.narozeni", "kind": "variable", "doc": "<p>narozeni (str): Datum narozen\u00ed \u017e\u00e1ka.</p>\n"}, {"fullname": "database.Zak.adresa", "modulename": "database", "qualname": "Zak.adresa", "kind": "variable", "doc": "<p>adresa (str): Adresa bydli\u0161t\u011b.</p>\n"}, {"fullname": "database.Zak.splnil", "modulename": "database", "qualname": "Zak.splnil", "kind": "variable", "doc": "<p>splnil (bool): Ur\u010duje, zda \u017e\u00e1k splnil po\u017eadavky. V\u00fdchoz\u00ed hodnota je False.</p>\n"}, {"fullname": "database.Zak.id_autoskoly", "modulename": "database", "qualname": "Zak.id_autoskoly", "kind": "variable", "doc": "<p>id_autoskoly (int): Ciz\u00fd kl\u00ed\u010d odkazuj\u00edc\u00ed na auto\u0161kolu do kter\u00e9 \u017e\u00e1k pat\u0159\u00ed.</p>\n"}, {"fullname": "database.Termin", "modulename": "database", "qualname": "Termin", "kind": "class", "doc": "<p>T\u0159ida Termin je model reprezentuj\u00edc\u00ed tabulku terminy v DB</p>\n", "bases": "sqlalchemy.orm.decl_api._DynamicAttributesType, sqlalchemy.inspection.Inspectable[sqlalchemy.orm.mapper.Mapper[typing.Any]]"}, {"fullname": "database.Termin.__init__", "modulename": "database", "qualname": "Termin.__init__", "kind": "function", "doc": "<p>A simple constructor that allows initialization from kwargs.</p>\n\n<p>Sets attributes on the constructed instance using the names and\nvalues in <code>kwargs</code>.</p>\n\n<p>Only keys that are present as\nattributes of the instance's class are allowed. These could be,\nfor example, any mapped columns or relationships.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "database.Termin.id", "modulename": "database", "qualname": "Termin.id", "kind": "variable", "doc": "<p>id (int): Prim\u00e1rn\u00ed kl\u00ed\u010d tabulky, unik\u00e1tn\u00ed identifik\u00e1tor term\u00ednu.</p>\n"}, {"fullname": "database.Termin.datum", "modulename": "database", "qualname": "Termin.datum", "kind": "variable", "doc": "<p>datum (str): Datum kon\u00e1n\u00ed term\u00ednu.</p>\n"}, {"fullname": "database.Termin.ac_flag", "modulename": "database", "qualname": "Termin.ac_flag", "kind": "variable", "doc": "<p>ac_flag (str): Reprezentuje, jestli je term\u00edn aktivn\u00ed, neaktivn\u00ed nebo ji\u017e prob\u011bhl.</p>\n"}, {"fullname": "database.Termin.max_ridicu", "modulename": "database", "qualname": "Termin.max_ridicu", "kind": "variable", "doc": "<p>max_ridicu (int): Kolik je maxim\u00e1ln\u00ed po\u010det m\u00edst na term\u00ednu.</p>\n"}, {"fullname": "database.Termin.zapsani_zaci", "modulename": "database", "qualname": "Termin.zapsani_zaci", "kind": "variable", "doc": "<p>zapsani_zaci (list): Seznam \u017e\u00e1k\u016f spojen\u00fdch s t\u00edmto term\u00ednem.</p>\n"}, {"fullname": "database.Autoskola", "modulename": "database", "qualname": "Autoskola", "kind": "class", "doc": "<p>T\u0159\u00edda Autoskola je model reprezentuj\u00edc\u00ed tabulku autoskoly v DB</p>\n", "bases": "sqlalchemy.orm.decl_api._DynamicAttributesType, sqlalchemy.inspection.Inspectable[sqlalchemy.orm.mapper.Mapper[typing.Any]]"}, {"fullname": "database.Autoskola.__init__", "modulename": "database", "qualname": "Autoskola.__init__", "kind": "function", "doc": "<p>A simple constructor that allows initialization from kwargs.</p>\n\n<p>Sets attributes on the constructed instance using the names and\nvalues in <code>kwargs</code>.</p>\n\n<p>Only keys that are present as\nattributes of the instance's class are allowed. These could be,\nfor example, any mapped columns or relationships.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "database.Autoskola.id", "modulename": "database", "qualname": "Autoskola.id", "kind": "variable", "doc": "<p>id (int): Prim\u00e1rn\u00ed kl\u00ed\u010d tabulky, unik\u00e1tn\u00ed identifik\u00e1tor auto\u0161koly.</p>\n"}, {"fullname": "database.Autoskola.nazev", "modulename": "database", "qualname": "Autoskola.nazev", "kind": "variable", "doc": "<p>nazev (str): N\u00e1zev auto\u0161koly.</p>\n"}, {"fullname": "database.Autoskola.da_schranka", "modulename": "database", "qualname": "Autoskola.da_schranka", "kind": "variable", "doc": "<p>da_schranka (str): Datov\u00e1 schr\u00e1nka auto\u0161koly.</p>\n"}, {"fullname": "database.Autoskola.email", "modulename": "database", "qualname": "Autoskola.email", "kind": "variable", "doc": "<p>email (str): E-mailov\u00e1 adresa auto\u0161koly.</p>\n"}, {"fullname": "database.Autoskola.heslo", "modulename": "database", "qualname": "Autoskola.heslo", "kind": "variable", "doc": "<p>heslo (str): Heslo auto\u0161koly, \u0161ifrovan\u00e9.</p>\n"}, {"fullname": "database.Autoskola.adresa_u", "modulename": "database", "qualname": "Autoskola.adresa_u", "kind": "variable", "doc": "<p>adresa_u (str): Adresa u\u010debny auto\u0161koly.</p>\n"}, {"fullname": "database.Autoskola.zaci", "modulename": "database", "qualname": "Autoskola.zaci", "kind": "variable", "doc": "<p>zaci (list): Seznam \u017e\u00e1k\u016f spojen\u00fdch s touto auto\u0161kolou.</p>\n"}, {"fullname": "database.Autoskola.zaznamy", "modulename": "database", "qualname": "Autoskola.zaznamy", "kind": "variable", "doc": "<p>zaznamy (list): Seznam z\u00e1znam\u016f spojen\u00fdch s touto auto\u0161kolou.</p>\n"}, {"fullname": "database.Komisar", "modulename": "database", "qualname": "Komisar", "kind": "class", "doc": "<p>T\u0159\u00edda Komisar je model reprezentuj\u00edc\u00ed tabulku Komisari v DB</p>\n", "bases": "sqlalchemy.orm.decl_api._DynamicAttributesType, sqlalchemy.inspection.Inspectable[sqlalchemy.orm.mapper.Mapper[typing.Any]]"}, {"fullname": "database.Komisar.__init__", "modulename": "database", "qualname": "Komisar.__init__", "kind": "function", "doc": "<p>A simple constructor that allows initialization from kwargs.</p>\n\n<p>Sets attributes on the constructed instance using the names and\nvalues in <code>kwargs</code>.</p>\n\n<p>Only keys that are present as\nattributes of the instance's class are allowed. These could be,\nfor example, any mapped columns or relationships.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "database.Komisar.id", "modulename": "database", "qualname": "Komisar.id", "kind": "variable", "doc": "<p>id (int): Prim\u00e1rn\u00ed kl\u00ed\u010d tabulky, unik\u00e1tn\u00ed identifik\u00e1tor komisa\u0159e.</p>\n"}, {"fullname": "database.Komisar.email", "modulename": "database", "qualname": "Komisar.email", "kind": "variable", "doc": "<p>email (str): Email komisa\u0159e.</p>\n"}, {"fullname": "database.Komisar.heslo", "modulename": "database", "qualname": "Komisar.heslo", "kind": "variable", "doc": "<p>heslo (str): Za\u0161ifrovan\u00e9 heslo komisa\u0159e.</p>\n"}, {"fullname": "database.Komisar.jmeno", "modulename": "database", "qualname": "Komisar.jmeno", "kind": "variable", "doc": "<p>jmeno (str): Jm\u00e9no komisa\u0159e.</p>\n"}, {"fullname": "database.Komisar.prijmeni", "modulename": "database", "qualname": "Komisar.prijmeni", "kind": "variable", "doc": "<p>prijmeni (str): P\u0159ijmen\u00ed komisa\u0159e.</p>\n"}, {"fullname": "database.Komisar.isAdmin", "modulename": "database", "qualname": "Komisar.isAdmin", "kind": "variable", "doc": "<p>isAdmin (str): Datum, do kdy m\u00e1 komisa\u0159 adminsk\u00e1 pr\u00e1va.</p>\n"}, {"fullname": "database.Superadmin", "modulename": "database", "qualname": "Superadmin", "kind": "class", "doc": "<p>T\u0159\u00edda Superadmin je model reprezentuj\u00edc\u00ed tabulku Superadmini v DB</p>\n", "bases": "sqlalchemy.orm.decl_api._DynamicAttributesType, sqlalchemy.inspection.Inspectable[sqlalchemy.orm.mapper.Mapper[typing.Any]]"}, {"fullname": "database.Superadmin.__init__", "modulename": "database", "qualname": "Superadmin.__init__", "kind": "function", "doc": "<p>A simple constructor that allows initialization from kwargs.</p>\n\n<p>Sets attributes on the constructed instance using the names and\nvalues in <code>kwargs</code>.</p>\n\n<p>Only keys that are present as\nattributes of the instance's class are allowed. These could be,\nfor example, any mapped columns or relationships.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "database.Superadmin.id", "modulename": "database", "qualname": "Superadmin.id", "kind": "variable", "doc": "<p>id (int): Prim\u00e1rn\u00ed kl\u00ed\u010d tabulky, unik\u00e1tn\u00ed identifik\u00e1tor superadmina.</p>\n"}, {"fullname": "database.Superadmin.email", "modulename": "database", "qualname": "Superadmin.email", "kind": "variable", "doc": "<p>email (str): Email superadmina.</p>\n"}, {"fullname": "database.Superadmin.heslo", "modulename": "database", "qualname": "Superadmin.heslo", "kind": "variable", "doc": "<p>heslo (str): Za\u0161ifrovan\u00e9 heslo superadmina.</p>\n"}, {"fullname": "database.Superadmin.jmeno", "modulename": "database", "qualname": "Superadmin.jmeno", "kind": "variable", "doc": "<p>jmeno (str): Jm\u00e9no superadmina.</p>\n"}, {"fullname": "database.Superadmin.prijmeni", "modulename": "database", "qualname": "Superadmin.prijmeni", "kind": "variable", "doc": "<p>prijmeni (str): P\u0159ijmen\u00ed superadmina.</p>\n"}, {"fullname": "database.Zapsany_zak", "modulename": "database", "qualname": "Zapsany_zak", "kind": "class", "doc": "<p>T\u0159\u00edda Zapsany_zak je model reprezentuj\u00edc\u00ed tabulku zapsani_zaci v DB</p>\n", "bases": "sqlalchemy.orm.decl_api._DynamicAttributesType, sqlalchemy.inspection.Inspectable[sqlalchemy.orm.mapper.Mapper[typing.Any]]"}, {"fullname": "database.Zapsany_zak.__init__", "modulename": "database", "qualname": "Zapsany_zak.__init__", "kind": "function", "doc": "<p>A simple constructor that allows initialization from kwargs.</p>\n\n<p>Sets attributes on the constructed instance using the names and\nvalues in <code>kwargs</code>.</p>\n\n<p>Only keys that are present as\nattributes of the instance's class are allowed. These could be,\nfor example, any mapped columns or relationships.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "database.Zapsany_zak.potvrzeni", "modulename": "database", "qualname": "Zapsany_zak.potvrzeni", "kind": "variable", "doc": "<p>potvrzeni (str): Stav, jestli je \u017e\u00e1k p\u0159ihl\u00e1\u0161en\u00fd na term\u00edn, \u010dek\u00e1 nebo je zam\u00edtnut.</p>\n"}, {"fullname": "database.Zapsany_zak.typ_zkousky", "modulename": "database", "qualname": "Zapsany_zak.typ_zkousky", "kind": "variable", "doc": "<p>typ_zkousky (str): T\u0159\u00edda \u0159idi\u010dsk\u00e9ho opr\u00e1vn\u011bn\u00ed, kterou bude \u017e\u00e1k podstupovat.</p>\n"}, {"fullname": "database.Zapsany_zak.druh_zkousky", "modulename": "database", "qualname": "Zapsany_zak.druh_zkousky", "kind": "variable", "doc": "<p>druh_zkousky (str): O jak\u00fd druh zkou\u0161ky se jedn\u00e1.</p>\n"}, {"fullname": "database.Zapsany_zak.zaver", "modulename": "database", "qualname": "Zapsany_zak.zaver", "kind": "variable", "doc": "<p>zaver (str): Jak se \u017e\u00e1kovy na zkou\u0161ce da\u0159ilo.</p>\n"}, {"fullname": "database.Zapsany_zak.id_terminu", "modulename": "database", "qualname": "Zapsany_zak.id_terminu", "kind": "variable", "doc": "<p>id_terminu (int): Ciz\u00fd kl\u00ed\u010d odkazuj\u00edc\u00ed na term\u00edn.</p>\n"}, {"fullname": "database.Zapsany_zak.id_komisare", "modulename": "database", "qualname": "Zapsany_zak.id_komisare", "kind": "variable", "doc": "<p>id_komisare (int): Ciz\u00fd kl\u00ed\u010d odkazuj\u00edc\u00ed na komisa\u0159e, kter\u00fd \u017e\u00e1ka zkou\u0161el.</p>\n"}, {"fullname": "database.Zapsany_zak.id_autoskoly", "modulename": "database", "qualname": "Zapsany_zak.id_autoskoly", "kind": "variable", "doc": "<p>id_autoskoly (int): Ciz\u00fd kl\u00ed\u010d odkazuj\u00edc\u00ed na auto\u0161kolu, do kter\u00e9 \u017e\u00e1k pat\u0159\u00ed.</p>\n"}, {"fullname": "database.Zapsany_zak.id_zaka", "modulename": "database", "qualname": "Zapsany_zak.id_zaka", "kind": "variable", "doc": "<p>id_zaka (int): Ciz\u00fd kl\u00edc odkazuj\u00edci na \u017e\u00e1ka.</p>\n"}, {"fullname": "database.Zapsany_zak.zacatek", "modulename": "database", "qualname": "Zapsany_zak.zacatek", "kind": "variable", "doc": "<p>zacatek (str): \u010cas, kdy se m\u00e1 \u017e\u00e1k dostavit.</p>\n"}, {"fullname": "database.Zapsany_zak.zak", "modulename": "database", "qualname": "Zapsany_zak.zak", "kind": "variable", "doc": "<p>zak (obj): Objekt \u017e\u00e1ka.</p>\n"}, {"fullname": "database.Zapsany_zak.komisar", "modulename": "database", "qualname": "Zapsany_zak.komisar", "kind": "variable", "doc": "<p>komisar (obj): Objekt komisa\u0159e.</p>\n"}, {"fullname": "database.Zapsany_zak.autoskola", "modulename": "database", "qualname": "Zapsany_zak.autoskola", "kind": "variable", "doc": "<p>autoskola (obj): Objekt auto\u0161koly.</p>\n"}, {"fullname": "database.Zaznam", "modulename": "database", "qualname": "Zaznam", "kind": "class", "doc": "<p>T\u0159\u00edda Zaznam je model reprezentuj\u00edc\u00ed tabulku zaznamy v DB</p>\n", "bases": "sqlalchemy.orm.decl_api._DynamicAttributesType, sqlalchemy.inspection.Inspectable[sqlalchemy.orm.mapper.Mapper[typing.Any]]"}, {"fullname": "database.Zaznam.__init__", "modulename": "database", "qualname": "Zaznam.__init__", "kind": "function", "doc": "<p>A simple constructor that allows initialization from kwargs.</p>\n\n<p>Sets attributes on the constructed instance using the names and\nvalues in <code>kwargs</code>.</p>\n\n<p>Only keys that are present as\nattributes of the instance's class are allowed. These could be,\nfor example, any mapped columns or relationships.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "database.Zaznam.id", "modulename": "database", "qualname": "Zaznam.id", "kind": "variable", "doc": "<p>id (int): Prim\u00e1rn\u00ed kl\u00ed\u010d tabulky, unik\u00e1tn\u00ed identifik\u00e1tor z\u00e1znamu.</p>\n"}, {"fullname": "database.Zaznam.druh", "modulename": "database", "qualname": "Zaznam.druh", "kind": "variable", "doc": "<p>druh (str): O jak\u00fd druh(z\u00e1pis, p\u0159id\u00e1n\u00ed, atd...) z\u00e1znamu se jedn\u00e1.</p>\n"}, {"fullname": "database.Zaznam.kdy", "modulename": "database", "qualname": "Zaznam.kdy", "kind": "variable", "doc": "<p>kdy (str): \u010cas, kdy z\u00e1znam vznikl.</p>\n"}, {"fullname": "database.Zaznam.zprava", "modulename": "database", "qualname": "Zaznam.zprava", "kind": "variable", "doc": "<p>zprava (str): Obsah z\u00e1znamu pro v\u00fdstup.</p>\n"}, {"fullname": "database.Zaznam.id_autoskoly", "modulename": "database", "qualname": "Zaznam.id_autoskoly", "kind": "variable", "doc": "<p>id_auto\u0161koly (int): Ciz\u00fd kl\u00ed\u010d odkazuj\u00edc\u00ed na auto\u0161koly, kter\u00e1 z\u00e1znam vytvo\u0159ila.</p>\n"}, {"fullname": "database.Vozidlo", "modulename": "database", "qualname": "Vozidlo", "kind": "class", "doc": "<p>T\u0159\u00edda Vozidlo je model reprezentuj\u00edc\u00ed tabulku Vozidla v DB</p>\n", "bases": "sqlalchemy.orm.decl_api._DynamicAttributesType, sqlalchemy.inspection.Inspectable[sqlalchemy.orm.mapper.Mapper[typing.Any]]"}, {"fullname": "database.Vozidlo.__init__", "modulename": "database", "qualname": "Vozidlo.__init__", "kind": "function", "doc": "<p>A simple constructor that allows initialization from kwargs.</p>\n\n<p>Sets attributes on the constructed instance using the names and\nvalues in <code>kwargs</code>.</p>\n\n<p>Only keys that are present as\nattributes of the instance's class are allowed. These could be,\nfor example, any mapped columns or relationships.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "database.Vozidlo.id", "modulename": "database", "qualname": "Vozidlo.id", "kind": "variable", "doc": "<p>id (int): Prim\u00e1rn\u00ed kl\u00ed\u010d tabulky, unik\u00e1tn\u00ed identifik\u00e1tor vozidla.</p>\n"}, {"fullname": "database.Vozidlo.znacka", "modulename": "database", "qualname": "Vozidlo.znacka", "kind": "variable", "doc": "<p>znacka (str): Zna\u010dka vozidla.</p>\n"}, {"fullname": "database.Vozidlo.model", "modulename": "database", "qualname": "Vozidlo.model", "kind": "variable", "doc": "<p>model (str): Model vozidla.</p>\n"}, {"fullname": "database.Vozidlo.spz", "modulename": "database", "qualname": "Vozidlo.spz", "kind": "variable", "doc": "<p>spz (str): RZ vozidla.</p>\n"}, {"fullname": "database.Vozidlo.id_autoskoly", "modulename": "database", "qualname": "Vozidlo.id_autoskoly", "kind": "variable", "doc": "<p>id_auto\u0161koly (int): Ciz\u00fd kl\u00ed\u010d odkazuj\u00edc\u00ed na auto\u0161kolu.</p>\n"}, {"fullname": "database.Upozorneni", "modulename": "database", "qualname": "Upozorneni", "kind": "class", "doc": "<p>T\u0159\u00edda Upozorneni je model reprezentuj\u00edc\u00ed tabulku Upozorneni v DB</p>\n", "bases": "sqlalchemy.orm.decl_api._DynamicAttributesType, sqlalchemy.inspection.Inspectable[sqlalchemy.orm.mapper.Mapper[typing.Any]]"}, {"fullname": "database.Upozorneni.__init__", "modulename": "database", "qualname": "Upozorneni.__init__", "kind": "function", "doc": "<p>A simple constructor that allows initialization from kwargs.</p>\n\n<p>Sets attributes on the constructed instance using the names and\nvalues in <code>kwargs</code>.</p>\n\n<p>Only keys that are present as\nattributes of the instance's class are allowed. These could be,\nfor example, any mapped columns or relationships.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "database.Upozorneni.id", "modulename": "database", "qualname": "Upozorneni.id", "kind": "variable", "doc": "<p>id (int): Prim\u00e1rn\u00ed kl\u00ed\u010d tabulky, unik\u00e1tn\u00ed identifik\u00e1tor upozorn\u011bn\u00ed.</p>\n"}, {"fullname": "database.Upozorneni.zprava", "modulename": "database", "qualname": "Upozorneni.zprava", "kind": "variable", "doc": "<p>zprava (str): Text, kter\u00fd upozorn\u011bn\u00ed nese.</p>\n"}, {"fullname": "database.Upozorneni.datum_vytvoreni", "modulename": "database", "qualname": "Upozorneni.datum_vytvoreni", "kind": "variable", "doc": "<p>datum_vytvoreni (str): Datum, kdy upozorn\u011bn\u00ed vzniklo.</p>\n"}, {"fullname": "database.Upozorneni.stav", "modulename": "database", "qualname": "Upozorneni.stav", "kind": "variable", "doc": "<p>stav (str): Stav, jestli bylo upozorn\u011bn\u00ed p\u0159e\u010dten\u00e9 nebo ne.</p>\n"}, {"fullname": "database.Upozorneni.id_autoskoly", "modulename": "database", "qualname": "Upozorneni.id_autoskoly", "kind": "variable", "doc": "<p>id_autoskoly (str): Ciz\u00fd kl\u00ed\u010d odkazuj\u00edc\u00ed na auto\u0161kolu, pro kterou toto upozorn\u011bn\u00ed plat\u00ed.</p>\n"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();